aWYoZlVuY3RJT25fRVhpU1RTKCJpXHg2ZWlfc2V0Iikpe0BpTmlfc2V0KCJlcnJvcl9sb2ciLG51bGwpO0Bpbklfc0V0KCJsb2dfZXJyb3JceDczIiwoaW50KXJvdW5kKDArMCswKSk7QEluaV9zZXQoIm1heFx4NWZleGVjdXRpb1wxNTZcMTM3dGltXHg2NSIsMDExNTMtMDExNTMpO31pZihmVU5DVGlPbl9FeElzVHMoInNldF9tYWdpY19xdW90ZXNceDVmcnVudGlcMTU1ZSIpKXtpZih2RXJzaU9uX2NPbXBhUmUocGhQVmVyc0lvbigpLCI1LjQuMCIsIjwiKSltYWdpY19xdW90ZXNfcnVudGltZSgoaW50KXJvdW5kKDArMCswKSk7fWNsYXNzIF9wcHN7cHVibGljJGhzaDtwdWJsaWMkX2k7cHVibGljJF90YWo7cHVibGljJF9oZWo7cHVibGljJF9jcDtwdWJsaWMkX3phO3B1YmxpYyRfenJ0O3B1YmxpYyRfd2RhO3B1YmxpYyRfdnBiO3B1YmxpYyRfdm9yO2Z1bmN0aW9uIHNlVENvT2soJF9ndHEsJF9lKXskX0NPT0tJRVskX2d0cV09JF9lO1NlVGNPT2tpZSgkX2d0cSwkX2UpO31mdW5jdGlvbiBhZnRlcmxvZ2lOKCl7JHRoaXMtPmhzaD0iZmE3MDRlNzM2NmQ2NjZiZCI7JHRoaXMtPl9pPSJfIi5zVWJTVHIobUQ1KCRfU0VSVkVSWyJIVFRQX0hPU1QiXSksLTA1Ni0gLTAxNTItMDc0LDA3NSswMTQ2Ky0wMjQwKTskdGhpcy0+X3Rhaj0iI2RcMTQ2NSI7JHRoaXMtPl9oZWo9IldpbmRvd3MtMTI1MSI7aWYoIUBpc3NldCgkX0NPT0tJRVskdGhpcy0+X2ldKXx8KCRfQ09PS0lFWyR0aGlzLT5faV0hPSR0aGlzLT5oc2gpKSR0aGlzLT5TZXRjT29LKCR0aGlzLT5faSwkdGhpcy0+aHNoKTt9ZnVuY3Rpb24gc1RBclRVUCgpe2lmKEZVTkNUSU9OX2V4aVNUUygiaW5pX1x4NjdldCIpKXskX3ZwYj1ASU5JX2dlVCgic2FmZV9tb2RlIik7JF9jcD1ASU5pX2dlVCgiZGlzYWJsZV9mdW5jdGlvbnMiKTt9aWYoISRfdnBiJiZGVU5DVGlvbl9FeGlTdHMoImVycm9yX3JcMTQ1cFx4NmZceDcydGluZyIpKUVSUm9SX3JlUG9SVElOZygoaW50KXJvdW5kKDArMCkpO2lmKCEkX3ZwYiYmRlVuQ1RJT25fRXhJc1RzKCJcMTYzZXRfdGlcMTU1ZV9saW1pdCIpKXNlVF90SU1FX2xpbWl0KChpbnQpcm91bmQoMCswKSk7aWYoZlVOY3RJb05fZVhpU1RzKCJnXHg2NXRfbWFnaWNfXDE2MXVvdGVcMTYzXHg1ZmdcMTYwYyIpJiZmdU5DVElvbl9FeElTdFMoImFyXHg3MmF5XDEzN21ceDYxXHg3MCIpJiZmVU5jVGlPbl9lWGlTdHMoInNceDc0cmlwc2xhc1x4NjhlcyIpJiZmdW5DVGlvbl9leElzdFMoImlzX2FyXDE2MmF5Iikpe2lmKEBHZVRfbWFHSUNfcXVPdEVzX2dQQygpKXtmdW5jdGlvbiBXU1MoJF9hKXtyZXR1cm4gQElzX2FycmFZKCRfYSk/QEFyUkFZX01BcCgiV1NTIiwkX2EpOkBTVFJJUHNsQXNoRXMoJF9hKTt9JF9QT1NUPVdTcygkX1BPU1QpOyRfQ09PS0lFPXdzcygkX0NPT0tJRSk7fX1pZighRlVuQ3RpT05fRVhJc3RzKCJwb3NpeF9nZXRwd3VpZCIpJiYoU3RyUE9TKCRfY3AsIlwxNjBvc2l4X2dlXDE2NFwxNjB3dWlkIik9PT1mYWxzZSkpe2Z1bmN0aW9uIHBPU2lYX0dlVHB3VWlkKCRfbCl7cmV0dXJuIGZhbHNlO319aWYoIUZVbmNUSW9OX0V4aXNUUygicG9zaXhcMTM3Z2V0Z3JcMTQ3aWQiKSYmKFN0UlBvcygkX2NwLCJwXDE1N1x4NzNpeF9nZXRncmdpZCIpPT09ZmFsc2UpKXtmdW5jdGlvbiBQT3NJeF9HZXRnUmdpZCgkX2wpe3JldHVybiBmYWxzZTt9fWlmKFN0UnRPbG93RVIoc3VCU1RyKFBIUF9PUywwMTIwMCstMDEyMDAsKGludClyb3VuZCgxLjUrMS41KSkpPT0id2luIikkX3Zvcj0id1wxNTFcMTU2IjtlbHNlICRfdm9yPSJuaXgiOyRfd2RhPSRfU0VSVkVSWyJcMTA0T1x4NDNVTUVOVF9SXDExN09UIl07aWYoRlVuY3RpT25fZXhJU3RTKCJnZXRjd2QiKSkkX3pydD1AR2VUY3dEKCk7ZWxzZSAkX3pydD1ARElSbmFtZShfX0ZJTEVfXyk7aWYoaXNzZXQoJF9QT1NUWyJjIl0pJiYkX1BPU1RbIlwxNDMiXSE9IiIpJF9QT1NUWyJjIl09U1RSX1JPdDEzKCRfUE9TVFsiYyJdKTtpZihpc3NldCgkX1BPU1RbImMiXSkpe2lmKEZ1bkNUaW9uX0VYaXNUcygiY2hceDY0aXIiKSlAQ0hEaXIoJF9QT1NUWyJjIl0pO31pZihGdU5DdElPTl9lWGlTVFMoImdceDY1dGN3ZCIpKXskX3phPUBHZVRjd2QoKTt9ZWxzZWlmKEBpc3NldCgkX1BPU1RbImMiXSkmJiRfUE9TVFsiYyJdIT0iIikkX3phPSRfUE9TVFsiYyJdO2Vsc2UgJF96YT0kX3pydDtpZigkX3Zvcj09IndcMTUxXDE1NiIpeyRfenJ0PVN0cl9SRVBsQWNFKCJcMTM0IiwiLyIsJF96cnQpOyRfemE9U3RSX3JFcGxhQ0UoIlwxMzQiLCIvIiwkX3phKTt9aWYoJF96YVtTdHJsZW4oJF96YSktKDA1NzctIC0wNjIxLTAxNDE3KV0hPSIvIikkX3phLj0iLyI7JHRoaXMtPl9jcD0kX2NwOyR0aGlzLT5femE9JF96YTskdGhpcy0+X3pydD0kX3pydDskdGhpcy0+X3dkYT0kX3dkYTskdGhpcy0+X3ZwYj0kX3ZwYjskdGhpcy0+X3Zvcj0kX3Zvcjt9ZnVuY3Rpb24gQWN0bG9HT3VUKCl7JF9pPSR0aGlzLT5faTtTRVRDT29rSUUoJF9pLCIiLFRpbUUoKS0oaW50KXJvdW5kKDE4MDArMTgwMCkpO2RpZSgiYnllISIpO31mdW5jdGlvbiBhQ3RGbSgpeyRfemE9JHRoaXMtPl96YTtpZighZW1wdHkoJF9QT1NUWyJwIl0pKXskX296bD1ARmlMRU1USW1lKCRfUE9TVFsiYyJdKTtzd2l0Y2goJF9QT1NUWyJwIl0pe2Nhc2UgInVwbG9hZEZpbFwxNDUiOmlmKCFATW9WRV9VUExPQURlRF9GSWxlKCRfRklMRVNbImYiXVsidG1wX25hbWUiXSwkX0ZJTEVTWyJmIl1bIm5hbWUiXSkpZWNobyJDYW4nXHg3NCB1cFwxNTRcMTU3YWQgZmlsZSEiO2Vsc2VpZigkX296bClAdE9VY0goJF9GSUxFU1siXHg2NiJdWyJuYW1lIl0sJF9vemwsJF9vemwpO2JyZWFrO2Nhc2UgIm1rXDE0NGlyIjppZighQG1LRGlyKHN0Ul9yb1QxMygkX1BPU1RbIngiXSkpKWVjaG8iQ2FuJ3QgY1x4NzJlYXRlIG5ldyBkaXIiO2Vsc2VpZigkX296bClAVE91Y0goU3RSX1JvdDEzKCRfUE9TVFsiXHg3OCJdKSwkX296bCwkX296bCk7YnJlYWs7Y2FzZSAiZGVsZXRlIjpmdW5jdGlvbiBERUxFVGVkSVIoJF93ZSl7JF93ZT0oc3VCU3RyKCRfd2UsLShpbnQpcm91bmQoMC41KzAuNSkpPT0iLyIpPyRfd2U6JF93ZS4iLyI7aWYoJF9oY2Y9QG9QRW5ESVIoJF93ZSkpe3doaWxlKCgkX25vcz1AcmVhRERJcigkX2hjZikpIT09ZmFsc2UpeyRfbm9zPSRfd2UuJF9ub3M7aWYoKEBiQXNlTmFtZSgkX25vcyk9PSIuXHgyZSIpfHwoQEJBU0VOQW1FKCRfbm9zKT09Ii4iKSljb250aW51ZTskX2VpPUBmSWxldFlQZSgkX25vcyk7aWYoJF9laT09ImRpciIpRGVMRXRlZElSKCRfbm9zKTtlbHNlIEB1TkxpbmsoJF9ub3MpO31AQ0xPc2VkaXIoJF9oY2YpO31AUk1kaXIoJF93ZSk7fWlmKEBJc19BUnJBWSgkX1BPU1RbImYiXSkpZm9yZWFjaCgkX1BPU1RbImYiXSBhcyRfcmIpe2lmKCRfcmI9PSIuLiIpY29udGludWU7JF9yYj1TVFJfUk90MTMoVVJMZEVDb2RFKCRfcmIpKTtpZihAaXNfZGlSKCRfcmIpKWRFbEVURWRJcigkX3JiKTtlbHNlIEB1TmxJbmsoJF9yYik7fWJyZWFrO31pZigkX296bClUb1VjSCgkX1BPU1RbIlwxNDMiXSwkX296bCwkX296bCk7fWVjaG8iPGgxPkZpbGUgbVwxNDFcMTU2YWdlXHg3MjwvaDE+XHgzY2RpdiBjbGFzcz1jb25cMTY0XDE0NW50PjxzY3JcMTUxcHQ+XDE2MF89XHg3OF89c189XHgyMlwwNDI7PC9zY3JceDY5cHQ+IjskX3diPVdzQ2FuRGlyKEBpc3NldCgkX1BPU1RbImMiXSk/JF9QT1NUWyJjIl06JF96YSk7aWYoJF93Yj09PWZhbHNlKXtlY2hvIkNhblx4Mjd0XDA0MFx4NmZcMTYwZW4gXDE2NGhpcyBmb2xkZXIhIjtyZXR1cm47fWdsb2JhbCAkX3JwbDskX3JwbD1hcnJheSgibmFtXHg2NSIsLTAyNjMrLTAzNC0gLTAzMjApO2lmKCFlbXB0eSgkX1BPU1RbInAiXSkpe2lmKEBwUmVnX21hdENIKCIhXHg3M18oW0EtXHg3YV0rKV8oXHg1Y2R7MX1cMDUxISIsJF9QT1NUWyJwIl0sJF90ZikpJF9ycGw9YXJyYXkoJF90ZlswNDAyKy0wMTM1LTAyNDRdLChpbnQpJF90ZlswNDA3LTA0MDVdKTt9ZWNobyI8c2NyaXB0PmZ1bmN0aW9uIHNhKCl7XDE0Nlx4NmZyKFwxNTE9MDtpPFx4NjQuZmlsZXMuZVx4NmNlbWVudHMubGVuZ1x4NzRoO2krKylpZihkLmZpXDE1NGVceDczLmVsZVx4NmRlbnRzW2ldXDA1NnRceDc5cGU9PSdjaFwxNDVcMTQza2JveCcpZC5maWxlcy5lXDE1NGVtXHg2NW5cMTY0c1tpXS5jaFx4NjVja2VkPVwxNDQuZmlsZXMuXHg2NWxlbVwxNDVudHNbMFx4NWQuY2hlY2tlZDtcMTc1PC9zY3JcMTUxXDE2MFx4NzQ+PHRhYmxceDY1IHdpXDE0NHRoXHgzZCcxXHgzMDAlXHgyNyBcMTQzbGFzcz0nXDE1NWFpbicgY2VsbHNwYWNcMTUxbmc9JzAnIGNlbGxwYVwxNDRkaW5nPVwwNDcyJz48Zlx4NmZcMTYyXDE1NSBuYW1lXHgzZGZpbGVzIG1lXDE2NGhcMTU3XHg2ND1wb3N0Pjx0cj5ceDNjdGggd2lkdGg9JzEzcHgnPjxcMTUxbnB1dCBcMTY0eXBlPWNoXDE0NVx4NjNrXDE0Mm94IG9uY2xceDY5Y2s9J3NhKCknIGNsYXNzPWNoa2JceDc4PjwvXDE2NGhcMDc2PHRoIHdpZHRoPSc0MCUnPjxhIFwxNTByZWY9JyMnIFwxNTduY2xpY2s9J2coXHgyMmZtXHgyMixudWxsLFwwNDJzX25ceDYxbWVceDVmIi4oJF9ycGxbKGludClyb3VuZCgwLjMzMzMzMzMzMzMzMzMzKzAuMzMzM
